@model Hotel.ViewsModels.MenuByLocationViewModel

@{
    ViewData["Title"] = $"Menu - {Model.Location.Name}";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var dishTypes = Model.GroupedDishes.Keys.ToList();
}

<div class="hero">
    <div class="container mt-5 pt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>@Model.Location.Name - Menu</h1>
            <a asp-controller="Location" asp-action="AllLocations" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-2"></i>Back to Locations
            </a>
        </div>

        @if (TempData["InfoMessage"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show">
                @TempData["InfoMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (User.IsInRole("Admin"))
        {
            <div class="mb-4">
                <a asp-controller="Restaurant" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-2"></i>Add Menu Item
                </a>
            </div>
        }

        @if (!Model.GroupedDishes.Any())
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>No menu items available for this location.
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-3">
                    <!-- Menu category navigation -->
                    <div class="list-group mb-4 sticky-top" style="top: 100px;">
                        @foreach (var type in dishTypes)
                        {
                            <a href="#@type.Replace(" ", "-")" class="list-group-item list-group-item-action">
                                @type
                            </a>
                        }
                    </div>
                </div>

                <div class="col-md-9">
                    @foreach (var type in dishTypes)
                    {
                        <div id="@type.Replace(" ", "-")" class="mb-5">
                            <h2 class="border-bottom pb-2 mb-4">@type</h2>

                            <div class="row row-cols-1 row-cols-md-2 g-4">
                                @foreach (var dish in Model.GroupedDishes[type])
                                {
                                    <div class="col">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between">
                                                    <h5 class="card-title">@dish.Name</h5>
                                                    <span class="text-primary fw-bold">@dish.Price.ToString("C0")</span>
                                                </div>
                                                <p class="card-text text-muted">@dish.Type</p>

                                                @if (User.IsInRole("Admin"))
                                                {
                                                    <div class="mt-3">
                                                        <a asp-controller="Dish" asp-action="Edit" asp-route-id="@dish.Id"
                                                           class="btn btn-sm btn-outline-primary">
                                                            <i class="bi bi-pencil me-1"></i>Edit Dish
                                                        </a>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Smooth scrolling for menu category links
        document.addEventListener('DOMContentLoaded', function() {
            const menuLinks = document.querySelectorAll('.list-group-item');

            menuLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const targetId = this.getAttribute('href');
                    const targetElement = document.querySelector(targetId);

                    window.scrollTo({
                        top: targetElement.offsetTop - 100,
                        behavior: 'smooth'
                    });

                    // Update active state
                    menuLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                });
            });
        });
    </script>
}
